"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9130],{3902:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>s});var n=o(5893),a=o(1151);const i={sidebar_position:3,keywords:["react-native-keyboard-controller","KeyboardControllerView","view"]},t="KeyboardControllerView",d={id:"api/keyboard-controller-view",title:"KeyboardControllerView",description:"A plain react-native View with some additional methods and props. Used internally in KeyboardProvider",source:"@site/versioned_docs/version-1.7.0/api/keyboard-controller-view.md",sourceDirName:"api",slug:"/api/keyboard-controller-view",permalink:"/react-native-keyboard-controller/pr-preview/pr-265/docs/1.7.0/api/keyboard-controller-view",draft:!1,unlisted:!1,editUrl:"https://github.com/kirillzyusko/react-native-keyboard-controller/tree/main/docs/versioned_docs/version-1.7.0/api/keyboard-controller-view.md",tags:[],version:"1.7.0",sidebarPosition:3,frontMatter:{sidebar_position:3,keywords:["react-native-keyboard-controller","KeyboardControllerView","view"]},sidebar:"tutorialSidebar",previous:{title:"KeyboardProvider",permalink:"/react-native-keyboard-controller/pr-preview/pr-265/docs/1.7.0/api/keyboard-provider"},next:{title:"KeyboardGestureArea",permalink:"/react-native-keyboard-controller/pr-preview/pr-265/docs/1.7.0/api/keyboard-gesture-area"}},c={},s=[{value:"Props",id:"props",level:2},{value:"<code>onKeyboardMoveStart</code>",id:"onkeyboardmovestart",level:3},{value:"<code>onKeyboardMove</code>",id:"onkeyboardmove",level:3},{value:"<code>onKeyboardMoveInteractive</code>",id:"onkeyboardmoveinteractive",level:3},{value:"<code>onKeyboardMoveEnd</code>",id:"onkeyboardmoveend",level:3},{value:"<code>statusBarTranslucent</code>",id:"statusbartranslucent",level:3},{value:"<code>navigationBarTranslucent</code>",id:"navigationbartranslucent",level:3}];function l(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",...(0,a.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h1,{id:"keyboardcontrollerview",children:"KeyboardControllerView"}),"\n",(0,n.jsxs)(r.p,{children:["A plain react-native ",(0,n.jsx)(r.code,{children:"View"})," with some additional methods and props. Used internally in ",(0,n.jsx)(r.a,{href:"/react-native-keyboard-controller/pr-preview/pr-265/docs/1.7.0/api/keyboard-provider",children:"KeyboardProvider"})]}),"\n",(0,n.jsx)(r.h2,{id:"props",children:"Props"}),"\n",(0,n.jsx)(r.h3,{id:"onkeyboardmovestart",children:(0,n.jsx)(r.code,{children:"onKeyboardMoveStart"})}),"\n",(0,n.jsx)(r.p,{children:"A callback function which is fired when keyboard starts a transition from one to another state (from closed to open, for example)."}),"\n",(0,n.jsx)(r.h3,{id:"onkeyboardmove",children:(0,n.jsx)(r.code,{children:"onKeyboardMove"})}),"\n",(0,n.jsx)(r.p,{children:"A callback function which is fired every time, when keyboard changes its position on the screen."}),"\n",(0,n.jsx)(r.h3,{id:"onkeyboardmoveinteractive",children:(0,n.jsx)(r.code,{children:"onKeyboardMoveInteractive"})}),"\n",(0,n.jsx)(r.p,{children:"A callback function which is fired every time, when user drags keyboard."}),"\n",(0,n.jsx)(r.h3,{id:"onkeyboardmoveend",children:(0,n.jsx)(r.code,{children:"onKeyboardMoveEnd"})}),"\n",(0,n.jsx)(r.p,{children:"A callback function which is fired when keyboard finished a transition from one to another state (from closed to open, for example)."}),"\n",(0,n.jsx)(r.h3,{id:"statusbartranslucent",children:(0,n.jsx)(r.code,{children:"statusBarTranslucent"})}),"\n",(0,n.jsxs)(r.p,{children:["A boolean prop to indicate whether ",(0,n.jsx)(r.code,{children:"StatusBar"})," should be translucent on ",(0,n.jsx)(r.code,{children:"Android"})," or not."]}),"\n",(0,n.jsx)(r.h3,{id:"navigationbartranslucent",children:(0,n.jsx)(r.code,{children:"navigationBarTranslucent"})}),"\n",(0,n.jsxs)(r.p,{children:["A boolean prop to indicate whether ",(0,n.jsx)(r.a,{href:"https://m2.material.io/design/platform-guidance/android-bars.html#android-navigation-bar",children:"NavigationBar"})," should be translucent on ",(0,n.jsx)(r.code,{children:"Android"})," or not."]})]})}function h(e={}){const{wrapper:r}={...(0,a.a)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},1151:(e,r,o)=>{o.d(r,{a:()=>t});var n=o(7294);const a={},i=n.createContext(a);function t(e){const r=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}}}]);